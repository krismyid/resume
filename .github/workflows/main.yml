name: Resume Creator from JSON
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false
          
      - name: Build Resume and Deploy on GitHub Pages
        uses: rajivnayanc/resume-creator-action@v1.1.0
        with:
          FileName: resume.json
        env:
          ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
          
      - name: Check file structure
        run: |
          echo "Checking directory structure after resume creation:"
          ls -la
          echo "Finding HTML files:"
          find . -name "*.html"
          
      - name: Install Chrome for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
      - name: Convert HTML to PDF
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: |
          npm install -g puppeteer-cli
          # Try with ./build/index.html instead - a common output location
          if [ -f "./build/index.html" ]; then
            puppeteer --no-sandbox print ./build/index.html resume.pdf
          elif [ -f "./dist/index.html" ]; then
            puppeteer --no-sandbox print ./dist/index.html resume.pdf
          else
            # Find the first HTML file and use it
            HTML_FILE=$(find . -name "*.html" | head -n 1)
            if [ -n "$HTML_FILE" ]; then
              echo "Using HTML file: $HTML_FILE"
              puppeteer --no-sandbox print "$HTML_FILE" resume.pdf
            else
              echo "No HTML file found!"
              exit 1
            fi
          fi
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: resume-${{ github.run_number }}
          release_name: Resume Update ${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Upload PDF to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resume.pdf
          asset_name: resume.pdf
          asset_content_type: application/pdf